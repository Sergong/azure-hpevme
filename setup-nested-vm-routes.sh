#!/usr/bin/env bash
# Setup routes for nested VM IP ranges on KVM hosts
# This allows nested VMs on different hosts to communicate

set -euo pipefail

echo "=== Configuring Nested VM Routes ==="

# Define nested VM ranges and their corresponding KVM hosts
# Format: "range:next_hop_ip"
ROUTES=(
  "10.0.1.16/28:10.0.1.10"   # vme-kvm-vm1's nested VMs
  "10.0.1.48/28:10.0.1.11"   # vme-kvm-vm2's nested VMs
)

# Get the current host's IP on mgmt bridge
HOST_IP=$(ip -4 addr show mgmt | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | head -1)
echo "Host IP: $HOST_IP"

# Add routes for other hosts' nested VM ranges
for route_entry in "${ROUTES[@]}"; do
  RANGE="${route_entry%%:*}"
  NEXTHOP="${route_entry##*:}"
  
  # Skip if this is our own range
  if [ "$NEXTHOP" == "$HOST_IP" ]; then
    echo "Skipping $RANGE (this host's range)"
    continue
  fi
  
  # Check if route already exists
  if ip route show "$RANGE" | grep -q "$NEXTHOP"; then
    echo "Route for $RANGE via $NEXTHOP already exists"
  else
    echo "Adding route: $RANGE via $NEXTHOP"
    ip route add "$RANGE" via "$NEXTHOP" dev mgmt
  fi
done

# Make routes persistent via netplan or systemd
ROUTE_FILE="/etc/systemd/network/10-nested-vm-routes.conf"

echo "Creating persistent route configuration..."
cat > "$ROUTE_FILE" <<EOF
# Nested VM routes for cross-host communication
# Generated by setup-nested-vm-routes.sh

EOF

for route_entry in "${ROUTES[@]}"; do
  RANGE="${route_entry%%:*}"
  NEXTHOP="${route_entry##*:}"
  
  if [ "$NEXTHOP" != "$HOST_IP" ]; then
    echo "[Route]" >> "$ROUTE_FILE"
    echo "Gateway=$NEXTHOP" >> "$ROUTE_FILE"
    echo "Destination=$RANGE" >> "$ROUTE_FILE"
    echo "" >> "$ROUTE_FILE"
  fi
done

echo "Routes configured and made persistent"
echo ""
echo "To verify routes:"
echo "  ip route show | grep -E '10.0.1.(16|48)/28'"
